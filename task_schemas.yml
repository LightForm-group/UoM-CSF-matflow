- name: get_model_texture
  outputs:
    - ODF
  inputs:
    - crystal_symmetry
    - specimen_symmetry
  methods:
    - name: unimodal
      inputs:
        - modal_orientation_hkl
        - modal_orientation_uvw
        - halfwidth
      implementations:
        - name: mtex
          commands:
            - command: <<executable>>
              options:
                - [crystal_symmetry]
                - [specimen_symmetry]
                - [modal_orientation_hkl]
                - [modal_orientation_uvw]
                - [halfwidth]
          output_map:
            - files:
                - name: ODF.txt
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: ODF
    - name: fibre
      inputs:
        - halfwidth
      implementations:
        - name: mtex
          commands:
            - command: <<executable>>
              options:
                - [crystal_symmetry]
                - [specimen_symmetry]
                - [halfwidth]
          output_map:
            - files:
                - name: ODF.txt
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: ODF
    - name: random
      inputs:
        - num_orientations
      implementations:
        - name: mtex
          commands:
            - command: <<executable>>
              options:
                - [crystal_symmetry]
                - [specimen_symmetry]
                - [num_orientations]
          output_map:
            - files:
                - name: ODF.txt
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: ODF

- name: estimate_ODF
  outputs:
    - ODF
  inputs:
    - specimen_symmetry
    - phase
  methods:
    - name: from_CTF_file
      inputs:
        - CTF_file_path[file=True]
      implementations:
        - name: mtex
          commands:
            - command: <<executable>>
              options:
                - [CTF_file_path]
                - [specimen_symmetry]
                - [phase]
          output_map:
            - files:
                - name: ODF.txt
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: ODF
    - name: from_CRC_file
      inputs:
        - CRC_file_path[file=True]
        - CPR_file_path[file=True]
      implementations:
        - name: mtex
          commands:
            - command: <<executable>>
              options:
                - [CRC_file_path]
                - [specimen_symmetry]
                - [phase]
          output_map:
            - files:
                - name: ODF.txt
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: ODF

- name: sample_texture
  inputs:
    - num_orientations
  outputs:
    - orientations
  methods:
    - name: from_ODF
      inputs:
        - ODF
      implementations:
        - name: mtex
          inputs:
            - crystal_symmetry
            - specimen_symmetry
          input_map:
            - inputs:
                - ODF
              file: ODF.txt
            - inputs:
                - ODF
              file: orientation_coordinate_system.json
          commands:
            - command: <<executable>>
              options:
                - [crystal_symmetry]
                - [specimen_symmetry]
                - [num_orientations]
          output_map:
            - files:
                - name: orientations.txt
                  save: true
                - name: orientation_coordinate_system.json
                  save: true
              output: orientations
    - name: from_model_ODF
      inputs:
        - ODF_components
        - crystal_symmetry
        - specimen_symmetry
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - ODF_components
              file: ODF_components.json
          commands:
            - command: <<executable>>
              options:
                - [ODF_components.json]
                - [crystal_symmetry]
                - [specimen_symmetry]
                - [num_orientations]
          output_map:
            - files:
                - name: orientations.json
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: orientations
    - name: from_CTF_file
      inputs:
        - CTF_file_path[file=True,save=True]
        - specimen_symmetry
        - phase
        - name: reference_frame_transformation
          default: euler_to_spatial # or "spatial_to_euler" or null
        - name: rotation # dict with keys "euler_angles_deg" list optional "keep_XY" bool, or "keep_euler" bool
          default: null
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - rotation
              file: rotation.json
          commands:
            - command: <<executable>>
              options:
                - [CTF_file_path]
                - [reference_frame_transformation]
                - [specimen_symmetry]
                - [phase]
                - [rotation.json]
                - [num_orientations]
          output_map:
            - files:
                - name: orientations.json
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: orientations
    - name: from_CRC_file
      inputs:
        - CRC_file_path[file=True,save=False]
        - CPR_file_path[file=True,save=True]
        - specimen_symmetry
        - phase
        - name: reference_frame_transformation
          default: euler_to_spatial # or "spatial_to_euler" or null
        - name: rotation # dict with keys "euler_angles_deg" list optional "keep_XY" bool, or "keep_euler" bool
          default: null
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - rotation
              file: rotation.json
          commands:
            - command: <<executable>>
              options:
                - [CRC_file_path]
                - [reference_frame_transformation]
                - [specimen_symmetry]
                - [phase]
                - [rotation.json]
                - [num_orientations]
          output_map:
            - files:
                - name: orientations.json
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: orientations
    - name: from_random
      implementations:
        - name: damask
          inputs:
            - name: orientation_coordinate_system
              default: null
              ignore_dependency_from: ["generate_microstructure_seeds"]
            - name: orientations_use_max_precision
              default: false
              ignore_dependency_from:
                [
                  "generate_microstructure_seeds",
                  "generate_volume_element",
                  "simulate_volume_element_loading",
                ]
    - name: from_ODF_mat
      inputs:
        - ODF
      implementations:
        - name: mtex
          inputs:
            - crystal_symmetry
            - specimen_symmetry
          input_map:
            - inputs:
                - ODF
              file: ODF.mat
            - inputs:
                - ODF
              file: orientation_coordinate_system.json
          commands:
            - command: <<executable>>
              options:
                - [crystal_symmetry]
                - [specimen_symmetry]
                - [num_orientations]
          output_map:
            - files:
                - name: orientations.txt
                  save: true
                - name: orientation_coordinate_system.json
                  save: true
              output: orientations

- name: sample_orientations
  inputs:
    - num_orientations
  outputs:
    - orientations
  methods:
    - name: from_CTF_file
      inputs:
        - CTF_file_path[file=True,save=True]
        - specimen_symmetry
        - phase
        - name: reference_frame_transformation
          default: euler_to_spatial # or "spatial_to_euler" or null
        - name: rotation # dict with keys "euler_angles_deg" list optional "keep_XY" bool, or "keep_euler" bool
          default: null
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - rotation
              file: rotation.json
          commands:
            - command: <<executable>>
              options:
                - [CTF_file_path]
                - [reference_frame_transformation]
                - [specimen_symmetry]
                - [phase]
                - [rotation.json]
                - [num_orientations]
          output_map:
            - files:
                - name: orientations.json
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: orientations
    - name: from_CRC_file
      inputs:
        - CRC_file_path[file=True,save=False]
        - CPR_file_path[file=True,save=True]
        - specimen_symmetry
        - phase
        - name: reference_frame_transformation
          default: euler_to_spatial # or "spatial_to_euler" or null
        - name: rotation # dict with keys "euler_angles_deg" list optional "keep_XY" bool, or "keep_euler" bool
          default: null
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - rotation
              file: rotation.json
          commands:
            - command: <<executable>>
              options:
                - [CRC_file_path]
                - [reference_frame_transformation]
                - [specimen_symmetry]
                - [phase]
                - [rotation.json]
                - [num_orientations]
          output_map:
            - files:
                - name: orientations.json
                  save: true
              options:
                - name: orientation_coordinate_system
                  default: null
              output: orientations

- name: generate_microstructure_seeds
  outputs:
    - microstructure_seeds
  methods:
    - name: random
      inputs:
        - size
        - num_grains
      implementations:
        - name: damask
          inputs:
            - phase_label
            - name: grid_size
              default: null
              ignore_dependency_from: ["generate_volume_element"]
            - name: RNG_seed
              default: null
            - name: orientation_coordinate_system
              default: null
              ignore_dependency_from:
                ["sample_texture", "visualise_volume_element_response"]
            - name: orientations_use_max_precision
              default: false
              ignore_dependency_from:
                [
                  "generate_volume_element",
                  "sample_texture",
                  "simulate_volume_element_loading",
                ]
          outputs:
            - microstructure_seeds

- name: load_microstructure
  outputs:
    - microstructure_image
  methods:
    - name: EBSD+DIC
      inputs:
        - DIC
        - EBSD
        - name: transform_type
          default: affine
        - root_path
        - name: scaling_factor
          default: 1
      implementations:
        - name: DefDAP
          input_map:
            - inputs:
                - DIC
                - EBSD
                - transform_type
                - root_path
                - scaling_factor
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: microstructure_image
    - name: EBSD
      inputs:
        - EBSD
        - root_path
        - name: scaling_factor
          default: 1
      implementations:
        - name: DefDAP
          input_map:
            - inputs:
                - EBSD
                - root_path
                - scaling_factor
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: microstructure_image

- name: generate_volume_element
  outputs:
    - volume_element
  methods:
    - name: single_voxel_grains
      implementations:
        - name: damask
          inputs:
            - name: grid_size
            - name: size
            - name: homog_label
            - name: phase_label
            - name: orientations
            - name: scale_morphology
              default: null
            - name: scale_update_size
              default: true
            - name: buffer_phase_size
              default: null
            - name: buffer_phase_label
              default: null
            - name: orientations_use_max_precision
              default: false
              ignore_dependency_from:
                [
                  "generate_microstructure_seeds",
                  "sample_texture",
                  "simulate_volume_element_loading",
                ]
    - name: particle_RVE
      implementations:
        - name: damask
          inputs:
            - name: microstructure_seeds
            - name: grid_size
            - name: homog_label
            - name: particle_distributions
            - name: particles
    - name: dual_phase_ti_alpha_colony
      implementations:
        - name: damask
          inputs:
            - name: grid_size
            - name: alpha_particle_axes_ratio # e.g. x-y-z dimension ratio: [4, 2, 1]
            - name: alpha_particle_centres # list of (list of length three) of length equal to number of alpha particles
            - name: alpha_orientation # orientation of all alpha particles
            - name: beta_orientation # orientation of single beta matrix
    - name: from_damask_input_files
      inputs:
        - name: geom_path
          file: true
        - name: material_path
          file: true
        - name: orientations
          default: null
      implementations:
        - name: damask
    - name: extrusion
      inputs:
        - microstructure_image
        - depth
        - image_axes
        - name: phase_label
          default: null
        - name: phase_label_mapping
          default: null
        - homog_label
      implementations:
        - name: damask
    - name: from_statistics
      implementations:
        - name: Dream3D
          inputs:
            - grid_size
            - name: resolution # specify either resolution or size
              default: null
            - name: size # specify either resolution or size
              default: null
            - name: origin
              default: null
            - name: periodic
              default: true
            - name: phase_statistics
            - name: orientations
              default: null
          input_map:
            - inputs:
                - grid_size
                - resolution
                - size
                - origin
                - periodic
                - phase_statistics
                - orientations
              file: pipeline.json
          output_map:
            - output: volume_element
              files:
                - name: pipeline.dream3d
                  save: false
          commands:
            - command: <<executable>>
              options:
                - [-p, "`pwd`/pipeline.json"] # seems to require absolute path!
              stderr: stderr.log
              stdout: stdout.log
    - name: random_voronoi
      notes: >
        In this method we use the random orientations that already exist in
        microstructure_seeds (using DAMASK Python package functions).
      implementations:
        - name: damask
          inputs:
            - name: microstructure_seeds
            - name: grid_size
            - name: homog_label
            - name: scale_morphology
              default: null
            - name: scale_update_size
              default: true
            - name: buffer_phase_size
              default: null
            - name: buffer_phase_label
              default: null
            - name: orientations_use_max_precision
              default: false
              ignore_dependency_from:
                [
                  "generate_microstructure_seeds",
                  "sample_texture",
                  "simulate_volume_element_loading",
                ]
        - name: neper
          inputs:
            - name: num_grains
            - name: grid_size
            - name: buffer_phase_size
              default: null
          commands:
            - command: <<executable>> -T
              options:
                - [-n, num_grains]
                - [-format, tesr]
                - [-tesrformat, ascii]
                - [-tesrsize, grid_size]
                - [-o, volume_element.tesr]
                - [-oridescriptor, "euler-bunge:passive"]
                - [-periodicity, all]
            - command: <<executable>> -T
              options:
                - [-n, num_grains]
                - [-format, tesr]
                - [-tesrformat, ascii]
                - [-tesrsize, grid_size]
                - [-o, volume_element.tesr]
                - [-oridescriptor, "euler-bunge:passive"]
                - [-periodicity, all]
                - [-transform, buffer_phase_size]
          command_pathways:
            - commands_idx: [0]
            - commands_idx: [1]
              condition: [buffer_phase_size]
          output_map:
            - output: volume_element
              files:
                - name: volume_element.tesr
                  save: true
              options:
                - homog_label
                - phase_label
                - buffer_phase_label
    - name: random_voronoi_from_orientations
      notes: >
        In this method we replace the orientations in microstructure_seeds
        with orientations computed from a previous task (using DAMASK Python package
        functions).
      inputs:
        - name: microstructure_seeds
        - name: grid_size
        - name: homog_label
        - name: orientations
        - name: scale_morphology
          default: null
        - name: scale_update_size
          default: true
        - name: buffer_phase_size
          default: null
        - name: buffer_phase_label
          default: null
        - name: orientations_use_max_precision
          default: false
          ignore_dependency_from:
            [
              "generate_microstructure_seeds",
              "sample_texture",
              "simulate_volume_element_loading",
            ]
      implementations:
        - name: damask

- name: modify_volume_element
  inputs:
    - volume_element
  outputs:
    - volume_element
  methods:
    - name: add_buffer_zones
      inputs:
        - buffer_sizes # size of buffer on each face [-x, +x, -y, +y, -z, +z]
        - phase_ids # phase of each buffer. Relative so 1 is the first new phase and so on
        - phase_labels # labels of the new phases
        - homog_label # label of the homog type
        - name: order # order to add the zones, default [x, y, z]
          default: null
      implementations:
        - name: damask
    - name: new_orientations
      inputs:
        - volume_element_response
      implementations:
        - name: damask
    - name: geometry
      inputs:
        - volume_element_response
      implementations:
        - name: damask
    - name: spread_orientations
      inputs:
        - phases
        - stddev_degrees
      implementations:
        - name: damask 

- name: visualise_volume_element
  inputs:
    - volume_element
  methods:
    - name: VTK
      outputs:
        - __file__VTR_file
      implementations:
        - name: damask

- name: visualise_volume_element_response
  inputs:
    - volume_element_response
    - increments
  methods:
    - name: texture_pole_figure
      inputs:
        - crystal_symmetries
        - pole_figure_directions
        - name: phases
          default: null # first phase only by default
          ignore_dependency_from: ["simulate_volume_element_loading"]
        - name: use_contours
          default: true
        - name: increments # final increment by default
          default: null
        - name: orientation_coordinate_system
          default: null
        - name: IPF_reference_direction
          default: z
        - name: colourbar_limits
          default: null
        - name: use_one_colourbar
          default: False
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - volume_element_response
                - increments
                - crystal_symmetries
                - phases
                - orientation_coordinate_system
              file: orientations.json
            - inputs:
                - colourbar_limits
                - use_one_colourbar
              file: options.json
          commands:
            - command: <<executable>>
              options:
                - [orientations.json]
                - [pole_figure_directions]
                - [use_contours]
                - [IPF_reference_direction]
                - [options.json]
    - name: texture_odf_section
      inputs:
        - crystal_symmetries
        - pole_figure_directions
        - name: phases
          default: null # first phase only by default
          ignore_dependency_from: ["simulate_volume_element_loading"]
        - name: use_contours
          default: true
        - name: increments # final increment by default
          default: null
        - name: orientation_coordinate_system
          default: null
        - name: IPF_reference_direction
          default: z
        - name: colourbar_limits
          default: null
        - name: use_one_colourbar
          default: False
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - volume_element_response
                - increments
                - crystal_symmetries
                - phases
                - orientation_coordinate_system
              file: orientations.json
            - inputs:
                - colourbar_limits
                - use_one_colourbar
              file: options.json
          commands:
            - command: <<executable>>
              options:
                - [orientations.json]
                - [pole_figure_directions]
                - [use_contours]
                - [IPF_reference_direction]
                - [options.json]

- name: generate_load_case
  methods:
    - name: mixed
      implementations:
        - name: formable
          inputs:
            - name:
                load_case_specs # list of dict with a `type` which must be another
                # `generate_load_case` method (e.g. uniaxial,
                # biaxial), and all remaining keys are those expected
                # given the specified method.
          input_map:
            - inputs:
                - load_case_specs
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
    - name: cyclic_uniaxial
      implementations:
        - name: formable
          inputs:
            - name: max_stresses # List of: maximum stress in Pa
            - name: min_stresses # List of: minimum stress in Pa
            - name: cycle_frequencies # List of: cycle frequencies in Hz
            - name: num_increments_per_cycle
            - name: num_cycles
            - name: directions # List of: a single characters: "x", "y" or "z"
            - name: waveforms # List of str: only supported currently is "sine"
              default: null
            - name: dump_frequency
              default: null
          input_map:
            - inputs:
                - max_stresses
                - min_stresses
                - cycle_frequencies
                - num_increments_per_cycle
                - num_cycles
                - directions
                - waveforms
                - dump_frequency
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
    - name: uniaxial
      implementations:
        - name: formable
          inputs:
            - total_times
            - num_increments
            - name: target_strains
              default: null
            - name: dump_frequency
              default: null
            - directions # List of: a single characters: "x", "y" or "z"
            - name: target_strain_rates
              default: null
            - name: rotations
              default: null
          input_map:
            - inputs:
                - total_times
                - num_increments
                - directions
                - target_strain_rates
                - target_strains
                - rotations
                - dump_frequency
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
    - name: biaxial
      implementations:
        - name: formable
          inputs:
            - total_times
            - num_increments
            - name: target_strains
              default: null
            - name: dump_frequency
              default: null
            - directions
            # List of: a string of two characters, ij, where {i,j} ∈ {"x","y","z"},
            # corresponding to the two loading directions
            - name: target_strain_rates
              default: null
            - name: rotations
              default: null
          input_map:
            - inputs:
                - total_times
                - num_increments
                - directions
                - target_strain_rates
                - target_strains
                - dump_frequency
                - rotations
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
    - name: plane_strain
      implementations:
        - name: formable
          inputs:
            - total_times
            - num_increments
            - name: target_strains
              default: null
            - name: dump_frequency
              default: null
            - directions
            # List of: a string of two characters, ij, where {i,j} ∈ {"x","y","z"}. The
            # first character, i, corresponds to the loading direction and the second, j,
            # corresponds to the zero-strain direction. Zero stress will be specified on
            # the remaining direction.
            - name: target_strain_rates
              default: null
            - name: rotations
              default: null
            - name: strain_rate_modes
              default: null
              # List of: one of "F_rate", "L", "L_approx". If not specified, default is
              # "F_rate". Use "L_approx" for specifying non-mixed boundary conditions.
          input_map:
            - inputs:
                - total_times
                - num_increments
                - directions
                - target_strain_rates
                - target_strains
                - rotations
                - strain_rate_modes
                - dump_frequency
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
    - name: planar_2D
      implementations:
        - name: formable
          inputs:
            - total_times
            - num_increments
            - name: target_strains
              default: null
            - name: dump_frequency
              default: null
            - normal_directions
              # List of: a single character, "x", "y" or "z", representing the loading
              # plane normal direction.
            - name: rotations
              default: null
            - name: target_strain_rates
              default: null
          input_map:
            - inputs:
                - total_times
                - num_increments
                - normal_directions
                - target_strain_rates
                - target_strains
                - rotations
                - dump_frequency
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
    - name: random_2D
      implementations:
        - name: formable
          inputs:
            - total_times
            - num_increments
            - name: target_strains
              default: null
            - name: dump_frequency
              default: null
            - normal_directions
            # List of: a single character, "x", "y" or "z", representing the loading plane
            # normal direction.x, y, or z (i.e. load in yz, xz or xy planes)
            - name: target_strain_rates
              default: null
            - name: rotations
              default: null
          input_map:
            - inputs:
                - total_times
                - num_increments
                - normal_directions
                - target_strain_rates
                - target_strains
                - rotations
                - dump_frequency
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
    - name: random_3D
      implementations:
        - name: formable
          inputs:
            - total_times
            - num_increments
            - name: target_strains
              default: null
            - name: dump_frequency
              default: null
            - name: rotation
              default: false
            - name: rotation_max_angle
              default: null
            - name: rotation_load_case
              default: true
            - name: non_random_rotation
              default: null
          input_map:
            - inputs:
                - total_times
                - num_increments
                - target_strains
                - dump_frequency
                - rotation
                - rotation_max_angle
                - rotation_load_case
                - non_random_rotation
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: load_case
  outputs:
    - load_case

- name: simulate_orientations_loading
  inputs:
    - orientations
    - load_case
    - name: phases
      ignore_dependency_from: ["simulate_volume_element_loading"]
    - name: numerics
      default: null
      ignore_dependency_from: ["simulate_volume_element_loading"]
    - name: solver
      default: null
    - name: initial_conditions
      default: null
  outputs:
    - orientations_response
  methods:
    - name: Taylor
      implementations:
        - name: damask
          input_map:
            - inputs:
                - orientations
                - phases
              file: material.yaml
              save: true
            - inputs:
                - numerics
              file: numerics.yaml
              save: true
            - inputs:
                - load_case
                - solver
                - initial_conditions                
              file: load.yaml
              save: true
          commands:
            - command: <<executable>>
              parallel_mode: MPI
              options:
                - [--load, load.yaml]
                - [--geom, geom.vtr]
              stdout: stdout.log
              stderr: stderr.log
          output_map:
            - files:
                - name: geom_load.hdf5
                  save: false
              output: orientations_response
              options:
                - name: operations
                  default: null
                - name: incremental_data
                  default: null
                - name: volume_data
                  default: null
                - name: phase_data
                  default: null
          archive_excludes: ["geom_load.hdf5", "*.spectralOut"]

- name: simulate_volume_element_loading
  inputs:
    - name: volume_element
    - name: load_case
    - name: homogenization_schemes
    - name: texture_alignment_method
      default: axes_keyword
    - name: single_crystal_parameters
      default: null
    - name: phases
      ignore_dependency_from: ["simulate_orientations_loading"]
    - name: numerics
      default: null
      ignore_dependency_from: ["simulate_orientations_loading"]
    - name: single_crystal_parameter_perturbation
      default: null
    - name: orientations_use_max_precision
      default:
        true # This will normalise and format the quaternions in the material file
        # using maximum avaiable machine precision. We can set this to false
        # once we use a newer version of DAMASK where the quaternion
        # normalisation tolerance was relaxed. (Where this parameter is true in other
        # tasks, it will modify the quaternion precision as saved within the orientations/
        # volume element parameter.)
      ignore_dependency_from:
        [
          "generate_microstructure_seeds",
          "sample_texture",
          "generate_volume_element",
        ]
    - name: solver
      default: null
    - name: initial_conditions
      default: null
  outputs:
    - volume_element_response
  methods:
    - name: CP_FFT
      implementations:
        - name: damask
          input_map:
            - inputs:
                - homogenization_schemes
                - volume_element
                - single_crystal_parameters
                - single_crystal_parameter_perturbation
                - phases
                - texture_alignment_method
                - orientations_use_max_precision
              file: material.yaml
              save: true
            - inputs:
                - numerics
              file: numerics.yaml
              save: true
            - inputs:
                - volume_element
              file: geom.vtr
              save: true
            - inputs:
                - load_case
                - solver
                - initial_conditions
              file: load.yaml
              save: true
          commands:
            - command: <<executable>>
              parallel_mode: MPI
              options:
                - [--load, load.yaml]
                - [--geom, geom.vtr]
              stdout: stdout.log
              stderr: stderr.log
          output_map:
            - files:
                - name: geom_load.hdf5
                  save: false
              output: volume_element_response
              options:
                - name: operations
                  default: null
                - name: incremental_data
                  default: null
                - name: volume_data
                  default: null
                - name: phase_data
                  default: null
                - name: field_data
                  default: null
                - name: grain_data
                  default: null
                - name: visualise
                  default: null
          archive_excludes: ["geom_load.hdf5", "*.spectralOut"]

- name: fit_yield_function
  outputs:
    - fitted_yield_functions
  methods:
    - name: least_squares
      implementations:
        - name: formable
          inputs:
            - yield_function_name
            - yield_point_criteria
            - volume_element_response[context=uniaxial,alias=uniaxial_response]
            - volume_element_response[context=multiaxial,alias=multiaxial_responses,group=multiaxial_responses]
            - name: fixed_parameters
              default: null
            - name: initial_parameters
              default: null
            - name: opt_parameters
              default: null
          input_map:
            - inputs:
                - yield_function_name
                - yield_point_criteria
                - uniaxial_response
                - multiaxial_responses
                - fixed_parameters
                - initial_parameters
                - opt_parameters
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: fitted_yield_functions

- name: get_tensile_test
  outputs:
    - tensile_test
  methods:
    - name: from_CSV
      implementations:
        - name: formable
          inputs:
            - name: CSV_file_path
              file: true
              save: true
            - name: CSV_arguments
            - name: eng_stress_col_index
              default: null
            - name: eng_strain_col_index
              default: null
            - name: true_stress_col_index
              default: null
            - name: true_strain_col_index
              default: null
            - name: stress_units
              default: Pa
            - name: plastic_range
              default: null
          input_map:
            - inputs:
                - CSV_file_path
                - CSV_arguments
                - eng_stress_col_index
                - eng_strain_col_index
                - true_stress_col_index
                - true_strain_col_index
                - stress_units
                - plastic_range
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: tensile_test

- name: optimise_single_crystal_parameters
  inputs:
    - name: volume_element_response
      group: single_crystal_parameter_optimisation
      alias: perturbed_volume_element_responses
      include_all_iterations: true
    - name: single_crystal_parameters
      group: single_crystal_parameter_optimisation
      include_all_iterations: true
    - name: single_crystal_parameter_perturbation
      group: single_crystal_parameter_optimisation
      alias: single_crystal_parameter_perturbations
      include_all_iterations: true
    - name: tensile_test
      alias: experimental_tensile_test
    - name: initial_damping
  outputs:
    - single_crystal_parameters
    - levenberg_marquardt_fitter
  methods:
    - name: levenberg_marquardt
      implementations:
        - name: formable
          input_map:
            - inputs:
                - single_crystal_parameters
                - single_crystal_parameter_perturbations
                - perturbed_volume_element_responses
                - experimental_tensile_test
                - initial_damping
              file: inputs.hdf5
              save: false
          commands:
            - command: <<executable>> inputs.hdf5
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: single_crystal_parameters
            - files:
                - name: outputs.hdf5
                  save: false
              output: levenberg_marquardt_fitter

- name: generate_MK_model
  outputs:
    - FE_input_data
  inputs:
    - sample_size
    - inhomogeneity_factor
    - L_groove
    - L_slope
    - material_angle
    - groove_angle
    - elastic_modulus
    - poisson_ratio
    - density
    - name: law
      default: null
    - name: fitted_yield_functions
      default: null
    - name: yield_point_criterion
      default: null
    - path_plastic_table[file=true]
    - mesh_size
    - name: bulk_parameters
      default: [0.06, 1.2]
    - elem_type
    - strain_rate
    - total_time
    - displacment_BC # [U_left, U_right, U_top, U_bottom]
    - name: time_step # [initial, min, max]
      default: [0, 0, 0]
    - name: max_plastic_strain
      default: 0.0
    - name: Nb_el_thickness
      default: 1
    - name: num_interval
      default: null
  methods:
    - name: default
      implementations:
        - name: abaqus

- name: simulate_MK_deformation
  methods:
    - name: FE
      outputs:
        - model_response
      implementations:
        - name: Abaqus
          inputs:
            - FE_input_data
            - memory
            - extraction_file_path[file=True,save=True]
            - name: do_datacheck
              default: null
          input_map:
            - inputs:
                - FE_input_data
              file: inputs.inp
          output_map:
            - files:
                - name: results_num_all.dat
                  save: true
              output: model_response
          command_pathways:
            - commands_idx: [0, 2]
            - commands_idx: [1]
              condition: [do_datacheck]
          commands:
            - command: . $ABAQUS_HOME/liccheck.sh; <<executable>>
              options:
                - [job=myjob]
                - [input=inputs.inp]
                - [cpus=$NSLOTS]
                - [scratch=$HOME/scratch]
                - [memory]
                - [interactive]
                - [double]
            - command: . $ABAQUS_HOME/liccheck.sh; <<executable>>
              options:
                - [datacheck]
                - [job=myjob]
                - [input=inputs.inp]
                - [cpus=$NSLOTS]
                - [scratch=$HOME/scratch]
                - [memory]
                - [interactive]
                - [double]
            - command: <<executable>> python
              options:
                - [extraction_file_path]
                - [interactive]

- name: find_forming_limit_curve
  outputs:
    - forming_limit_curve
  inputs:
    - model_response[alias=all_model_responses,group=all_model_responses]
  methods:
    - name: strain_rate_ratio
      implementations:
        - name: abaqus
          inputs:
            - strain_rate_ratio_threshold
            - name: displacment_BC
              group: all_model_responses
              alias: all_displacement_BCs
            - name: groove_angle
              group: all_model_responses
              alias: all_groove_angles

- name: visualise_orientations
  methods:
    - name: pole_figure
      inputs:
        - orientations
        - crystal_symmetry
        - pole_figure_directions
        - name: use_contours
          default: true
        - name: IPF_reference_direction
          default: z
        - name: colourbar_limits
          default: null
        - name: use_one_colourbar
          default: False
      implementations:
        - name: mtex
          input_map:
            - inputs:
                - orientations
                - crystal_symmetry
              file: orientations.json
            - inputs:
                - colourbar_limits
                - use_one_colourbar
              file: options.json
          commands:
            - command: <<executable>>
              options:
                - [orientations.json]
                - [pole_figure_directions]
                - [use_contours]
                - [IPF_reference_direction]
                - [options.json]

- name: generate_phase_field_input
  outputs:
    - phase_field_input
  methods:
    - name: from_random_voronoi
      implementations:
        - name: cipher
          inputs:
            - materials
            - interfaces
            - num_phases
            - grid_size
            - size
            - components
            - outputs
            - solution_parameters
            - name: random_seed
              default: null
          input_map:
            - inputs:
                - materials
                - interfaces
                - num_phases
                - grid_size
                - size
                - components
                - outputs
                - solution_parameters
                - random_seed
              file: inputs.hdf5
              save: false
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: phase_field_input
          commands:
            - command: <<executable>> inputs.hdf5
    - name: from_volume_element
      implementations:
        - name: cipher
          inputs: 
            - volume_element
            - materials
            - interfaces
            - components
            - outputs
            - solution_parameters
            - name: phase_type_map
              default: null
            - name: size
              default: null
            - name: random_seed
              default: null
          input_map:
            - inputs:
                - volume_element
                - materials
                - interfaces
                - phase_type_map
                - size
                - components
                - outputs
                - solution_parameters
                - random_seed
              file: inputs.hdf5
              save: false
          output_map:
            - files:
                - name: outputs.hdf5
                  save: false
              output: phase_field_input
          commands:
            - command: <<executable>> inputs.hdf5

- name: simulate_grain_growth
  outputs:
    - phase_field_output
  methods:
    - name: phase_field
      implementations:
        - name: cipher
          inputs:
            - phase_field_input
          input_map:
            - inputs:
                - phase_field_input
              file: inputs.hdf5
              save: false
          output_map:
            - files:
                - name: post_proc_outputs.hdf5
                  save: false
              output: phase_field_output
          commands:
            - command: <<executable>> inputs.hdf5 # write cipher_input.yaml and post_processing.py
            - command: cipher.exe
              parallel_mode: MPI
              options:
                - [--config, cipher_input.yaml]
              stdout: stdout.log
              stderr: stderr.log
            - command: python post_processing.py # parse outputs to outputs.hdf5

- name: dummy_task_1
  outputs:
    - parameter_2
  methods:
    - name: method_1
      inputs:
        - name: parameter_1
          default: 432
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_1
              file: t1_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_2
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t1_m1_infile_1]
                - [--infile2, t1_m1_infile_1]
                - [--value, parameter_1]

- name: dummy_task_2
  outputs:
    - parameter_4
  methods:
    - name: method_1
      inputs:
        - parameter_2
        - parameter_3
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_2
                - parameter_3
              file: t2_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_4
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t2_m1_infile_1]
                - [--infile2, t2_m1_infile_1]
                - [--value, parameter_2]

- name: dummy_task_2c
  outputs:
    - parameter_4
    - parameter_2
  methods:
    - name: method_1
      inputs:
        - name: parameter_1
        - name: parameter_2
        - name: parameter_3
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_1
                - parameter_2
                - parameter_3
              file: t2_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_4
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_2
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t2_m1_infile_1]
                - [--infile2, t2_m1_infile_1]
                - [--value, parameter_2]

- name: dummy_task_2d
  outputs:
    - parameter_5
  methods:
    - name: method_1
      inputs:
        - name: parameter_2
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_2
              file: t2_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_5
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t2_m1_infile_1]
                - [--infile2, t2_m1_infile_1]
                - [--value, parameter_2]

- name: dummy_task_2e
  outputs:
    - parameter_4
    - parameter_2
  methods:
    - name: method_1
      inputs:
        - name: parameter_1
        - name: parameter_2
        - name: parameter_3
        - name: parameter_5
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_1
                - parameter_2
                - parameter_3
                - parameter_5
              file: t2_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_4
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_2
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t2_m1_infile_1]
                - [--infile2, t2_m1_infile_1]
                - [--value, parameter_2]

- name: dummy_task_3
  outputs:
    - parameter_6
  methods:
    - name: method_1
      inputs:
        - parameter_5
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_5
              file: t3_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_6
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t3_m1_infile_1]
                - [--infile2, t3_m1_infile_1]
                - [--value, parameter_5]

- name: dummy_task_4
  outputs:
    - parameter_8
  methods:
    - name: method_1
      inputs:
        - parameter_2[group=group_A]
        - parameter_6
        - parameter_7
        - parameter_9
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_2
                - parameter_6
                - parameter_7
                - parameter_9
              file: t4_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_8
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t4_m1_infile_1]
                - [--infile2, t4_m1_infile_1]

- name: dummy_task_5
  inputs:
    - parameter_8[alias=parameter_8_group]
    - parameter_10
  outputs:
    - parameter_11
  methods:
    - name: method_1
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_8_group
                - parameter_10
              file: t5_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_11
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t5_m1_infile_1]
                - [--infile2, t5_m1_infile_1]

- name: dummy_task_6b
  inputs:
    - parameter_4[context=uniaxial,alias=parameter_4_uniaxial]
    - parameter_4[context=multiaxial,group=multiaxial,alias=parameter_4_multiaxial]
    - parameter_5
  outputs:
    - parameter_8
  methods:
    - name: method_1
      implementations:
        - name: dummy_software
          input_map:
            - inputs:
                - parameter_4_multiaxial
                - parameter_4_uniaxial
                - parameter_5
              file: t6b_m1_infile_1
          output_map:
            - files:
                - name: outfile.txt
                  save: true
              output: parameter_8
          commands:
            - command: <<executable>> dummy doSomething
              options:
                - [--infile1, t6b_m1_infile_1]
                - [--infile2, t6b_m1_infile_1]

- name: dummy_task_make_file
  outputs: []
  inputs:
    - name: size_MB
    - name: path
      default: dummy.file
  methods:
    - name: method_1
      implementations:
        - name: dummy_software
          commands:
            - command: <<executable>> dummy makeFile
              options:
                - [--size-MB, size_MB]
                - [path]
